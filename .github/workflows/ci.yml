name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  TAG: ${{ github.ref_type == 'tag' && github.ref_name || 'latest' }}

jobs:
  build-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build NestJS API
        run: npm run build-api:production

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push API Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/tinysd-api/Dockerfile
          push: true
          tags: vadimpastushenko7/tinysd-api:${{ env.TAG }}

  build-ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build-ui:production

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push UI Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/tinysd-ui/Dockerfile
          push: true
          tags: vadimpastushenko7/tinysd-ui:${{ env.TAG }}

  deploy-on-vm:
    runs-on: self-hosted
    needs:
      - build-api
      - build-ui
    steps:
      - name: Deploy to Kubernetes cluster on VM
        run: |
          envsubst < k8s-angular-agent-app.yaml | kubectl apply -f -
        env:
          IMAGE_TAG: ${{ needs.detect-changes.outputs.git_tag }}
