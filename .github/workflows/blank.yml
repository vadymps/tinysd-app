name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      git_tag: ${{ steps.get_tag.outputs.tag }}
      be_changed: ${{ steps.backend.outputs.changed }}
      fe_changed: ${{ steps.frontend.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "::set-output name=tag::$TAG"

      - name: Use the tag
        run: echo "Latest tag is $TAG"

      - name: Detect changes in backend
        id: backend
        run: |
          git fetch origin main
          CHANGED=$(git diff --name-only origin/main HEAD | grep '^apps/tinysd-api/' || true)
          if [ -n "$CHANGED" ]; then
            echo "Backend changed"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Backend unchanged"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Detect changes in frontend
        id: frontend
        run: |
          CHANGED=$(git diff --name-only origin/main HEAD | grep '^apps/tinysd-ui/' || true)
          if [ -n "$CHANGED" ]; then
            echo "Frontend changed"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Frontend unchanged"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  build-be:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.be_changed == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build NestJS API
        run: npm run build api

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push BE Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/tinysd-api/Dockerfile
          push: true
          tags: vadimpastushenko7/tinysd-api:${{ env.TAG }}

  build-fe:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.fe_changed == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build agent-app -- --configuration production

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push FE Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/tinysd-ui/Dockerfile
          push: true
          tags: vadimpastushenko7/tinysd-ui:${{ env.TAG }}

  deploy-on-vm:
    runs-on: self-hosted
    needs: build-and-push

    steps:
      - name: Deploy to Kubernetes cluster on VM
        run: |
          envsubst < k8s-angular-agent-app.yaml | kubectl apply -f -
        env:
          IMAGE_TAG: ${{ needs.build-and-push.outputs.git_tag }}
